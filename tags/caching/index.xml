<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Caching on Chao-Chun (Joe) Hsu</title>
    <link>https://chaochunhsu.github.io/tags/caching/</link>
    <description>Recent content in Caching on Chao-Chun (Joe) Hsu</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://chaochunhsu.github.io/tags/caching/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>My Attempt at Building a Multi-GPU Cache Embedding Server with TEI and Qdrant</title>
      <link>https://chaochunhsu.github.io/patterns/blogs/tei_qdrant_cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://chaochunhsu.github.io/patterns/blogs/tei_qdrant_cache/</guid>
      <description>&lt;h2 id=&#34;my-attempt-at-building-a-multi-gpu-cache-embedding-server-with-tei-and-qdrant&#34;&gt;My Attempt at Building a Multi-GPU Cache Embedding Server with TEI and Qdrant&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Github repo: &lt;a href=&#34;https://github.com/joe32140/tei-qdrant-cache&#34;&gt;https://github.com/joe32140/tei-qdrant-cache&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;before-we-start&#34;&gt;Before We Start&lt;/h3&gt;&#xA;&lt;p&gt;Serving an LLM-based embedding model with replicates over multiple GPUs on the same machine might sound trivial today (2025), but after my extensive search, there&amp;rsquo;s actually no one-click setup. Originally, I thought vLLM could easily fulfill my needs, or that SGLang could be an alternative if vLLM didn&amp;rsquo;t work. However, both libraries turned out to be either very limited to specific models or did not support request routing across multi-GPUs. Luckily, I encountered &lt;a href=&#34;https://docs.vllm.ai/en/latest/deployment/nginx.html&#34;&gt;link&lt;/a&gt; and &lt;a href=&#34;https://github.com/huggingface/text-embeddings-inference/issues/87#issuecomment-1822970062&#34;&gt;link&lt;/a&gt;, leading me to an Nginx load balancer setup. It also turned out that Hugging Face has its own &lt;a href=&#34;https://github.com/huggingface/text-embeddings-inference/tree/main&#34;&gt;text-embeddings-inference&lt;/a&gt; library, which provides seamless support for serving embedding models with pre-built Docker images. In this post, my goal was to create a robust system for serving text embeddings using Hugging Face&amp;rsquo;s text-embeddings-inference (TEI) server, specifically targeting multi-GPU setups and incorporating a mechanism to handle repeated requests efficiently â€“ essentially, building a smart caching layer.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
